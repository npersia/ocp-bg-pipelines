apiVersion: v1
items:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: myfirstpipeline
    labels:
      name: myfirstpipeline
    annotations:
      pipeline.alpha.openshift.io/uses: '[{"name": "myphp", "namespace": "", "kind": "DeploymentConfig"}]'
  spec:
    triggers:
      -
        type: GitHub
        github:
          secret: secret101
      -
        type: Generic
        generic:
          secret: secret101
    runPolicy: Serial
    source:
      type: None
    strategy:
      type: JenkinsPipeline
      jenkinsPipelineStrategy:
          jenkinsfile: |-
            try {
               timeout(time: 20, unit: 'MINUTES') {
                  def appName="bg"
                  def project="APP_PROD"
                  def tag="blue"
                  def altTag="green"
                  def verbose="false"
          
                  node {
                    stage("Build In QA") {
                      openshiftBuild(namespace: 'APP_QA', buildConfig: 'bg', showBuildLogs: 'true')
                    }
                    stage("Initialize") {

                      sh "oc get route ${appName} -n ${project} -o jsonpath='{ .spec.to.name }' --loglevel=4 > service_name"
                      sh "oc get route ${appName} -n ${project} -o jsonpath='{ .spec.to.weight }' --loglevel=4 > service_weight"
                      service_name = readFile('service_name').trim()
                      service_weight = readFile('service_weight').trim()

                      if (service_name == "${appName}-blue" && service_weight == "100") {
                        tag = "green"
                        altTag = "blue"
                      }
                      else if (service_name == "${appName}-blue" && service_weight == "0") {
                        tag = "blue"
                        altTag = "green"
                      }
                      else if (service_name == "${appName}-green" && service_weight == "0") {
                        tag = "green"
                        altTag = "blue"
                      }
                      else if (service_name == "${appName}-green" && service_weight == "100") {
                        tag = "blue"
                        altTag = "green"
                      }
                    }

                    stage("Deploy Prod") {
                      input(message: 'Pasar a Produccion?', id: 'Id1', ok: 'Ok')
                      openshiftTag(namespace: 'APP_QA', sourceStream: 'bg',  sourceTag: 'latest', destinationStream: 'bg', destinationTag: 'promoteToProd')
                      openshiftDeploy(namespace: 'APP_PROD', deploymentConfig: "${appName}-${tag}")
                    }
                  }
               }
            } catch (err) {
               echo "in catch block"
               echo "Caught: ${err}"
               currentBuild.result = 'FAILURE'
               throw err
            }          
    output:
    resources:
    postCommit:
kind: List
metadata: {}
